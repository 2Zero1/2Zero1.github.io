{"data":{"site":{"siteMetadata":{"title":"Zero1's Note","author":"Zero1","siteUrl":"https://github.com/2Zero1","comment":{"disqusShortName":"2Zero1","utterances":"2Zero1 Blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"36330579-8246-5a8c-817e-a0f41c3b33fd","excerpt":"할 일 목록 코드 스피츠 CSS 정리 완료하지 못한 목록 완료 목록 코드 스피츠 1강 Graphics -> 점을 찍는 행위, 점찍는 방법\nGraphics의 기본적인 요소 : x, y, width, height, color Fixed Number Graphics의 가장 원시적인 체계로 고정된 숫자로 표현하는 체계이다. 단점 해상도, 창 사이즈, 가로모드, 세로모드, 크롬 사이즈 같은 환경이 변하게 되면 적응할 수가 없다. Chrome : window의 닫기버튼, 스크롤바 같은 것들. metaphor…","html":"<h2 id=\"할-일-목록\"><a href=\"#%ED%95%A0-%EC%9D%BC-%EB%AA%A9%EB%A1%9D\" aria-label=\"할 일 목록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>할 일 목록</h2>\n<ol>\n<li>코드 스피츠 CSS 정리</li>\n</ol>\n<h2 id=\"완료하지-못한-목록\"><a href=\"#%EC%99%84%EB%A3%8C%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%9C-%EB%AA%A9%EB%A1%9D\" aria-label=\"완료하지 못한 목록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완료하지 못한 목록</h2>\n<h2 id=\"완료-목록\"><a href=\"#%EC%99%84%EB%A3%8C-%EB%AA%A9%EB%A1%9D\" aria-label=\"완료 목록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완료 목록</h2>\n<h3 id=\"코드-스피츠-1강\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%8A%A4%ED%94%BC%EC%B8%A0-1%EA%B0%95\" aria-label=\"코드 스피츠 1강 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 스피츠 1강</h3>\n<p>Graphics -> 점을 찍는 행위, 점찍는 방법\nGraphics의 기본적인 요소 : x, y, width, height, color</p>\n<h3 id=\"fixed-number\"><a href=\"#fixed-number\" aria-label=\"fixed number permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fixed Number</h3>\n<p>Graphics의 가장 원시적인 체계로 고정된 숫자로 표현하는 체계이다.</p>\n<h3 id=\"단점\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<p>해상도, 창 사이즈, 가로모드, 세로모드, 크롬 사이즈 같은 환경이 변하게 되면 적응할 수가 없다.</p>\n<p>Chrome : window의 닫기버튼, 스크롤바 같은 것들.</p>\n<h3 id=\"metaphor\"><a href=\"#metaphor\" aria-label=\"metaphor permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>metaphor</h3>\n<p>퍼센트는 환경을 인식해서 고정 숫자로 바뀌게 되는데 그렇다면 이건 함수로 볼 수 있다. 공식을 이용해서 환경을 인식해 숫자로 변화시켜주는 것을 말함. 한 마디로 함수다. 이런 것을 Abstract Calculator라고 한다.</p>\n<p>추상화된 Graphics 시스템을 이어받는 공통적인것들을 Component라고 한다. 예로 HTML을 들 수 있다. 이미지 파일을 표한하기 위해 image 태그에 파일 경로를 넣어주는것.</p>\n<p>HTML 속성들은 공통적인 스타일 속성을 갖는데 라디오 버튼, drv, 이미지와 같은 스타일 속성을 먹는 것들은 공통되어져 있는 시스템 하에 Component들이 구현된것. 그러면 HTML 체계 전체를 FrameWork라고 할 수 있다.</p>\n<p>Component들이 일정한 규칙과 사용방법을 지키는 형태대로 구현되어져 있다면 Framework이라고 부른다.</p>\n<p>metaphor의 종류 : %, left, block, inline float</p>\n<h3 id=\"rendering\"><a href=\"#rendering\" aria-label=\"rendering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rendering</h3>\n<p>어떤 대상을 내가 원하는 모습으로 다시 그려내는것.\n일반적으로 보다 구체적이고 시각적인 형태로 바꿔주는 것.\n그림을 그리기 위한 데이터를 어떻게 그림으로 바꿔내는가에 대한 이야기다.\ngeometry(reflow)로 계산하고 fragment fill(repaint)로 채운다.\n영역을 나누고 채운다.</p>\n<h4 id=\"geometry-calculate\"><a href=\"#geometry-calculate\" aria-label=\"geometry calculate permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Geometry Calculate</h4>\n<p>지형을 나눠주는 것. 영역을 나눠주는것.</p>\n<h4 id=\"fragment-fill\"><a href=\"#fragment-fill\" aria-label=\"fragment fill permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fragment fill</h4>\n<p>칠하는 대상을 fragment라고 하며 그곳을 색칠함.</p>\n<p>pixel은 중립적이지 않다.일반적으로 휴대폰에서 HTML 구현해서 뷰포트를 스케일로 맞추면 해상도가 640 으로 나옴. 그럼 진짜 우리 휴대폰의 pixel이 640개일까 ? 아니다. 이때의 pixel은 뭔가?</p>\n<h3 id=\"css\"><a href=\"#css\" aria-label=\"css permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS</h3>\n<p>어떻하면 고정된 숫자를 사용하지 않고 계산된 체계로 그래픽을 표현할까와 geometric 영역을 어떤식으로 표현할까 또 색칠할때 어떻게 명령을 내릴까에 대한 일종의 언어이다. 선언적임.</p>\n<p>추상적인 체계를 표현하는 방법은 실제로 공식이 간단하지 않은 경우가 많다.\n예로 right를 구현한다면, 부모의 레이아웃의 width를 구해 자식의 width를 빼고 그자리에 두는 것이다. 편하게 사용하지만 실제로 내부에선 복잡하다.</p>\n<p>CSS에는 다양한 추상적인 계산체계를 표현해주는 메타포에서 어떻게 내부에서 계산되는지 이해해야만 원하는 레이아웃을 그릴 수 있는 것임.</p>\n<p>CSS의 속성 또는 값이 구체적으로 발현될떈 어떤 방식으로 계산되서 표현되는지 이해하는 것이 중요하다.</p>\n<p>맞는 구현인지 틀린 구현인지 판정하는 것은 사양서를 본다. 브라우저가 작동하는게 맞는지 틀린지 보는것은 사양서를 본다.\n표준이 무엇인지 알아야 표준대로 구현하고 나머지를 폴리필 할 수 있다. 그러기 위해선 뭐가 표준인지 알아야함.</p>\n<p>CSS LEVEL1 -> a4 한장 짜리로 할 수 있는게 거의 없다.\nCSS LEVEL2 -> MS IE4가 세상을 지배해서, 이때의 스펙은 MS가 제안한게 많음.\nCSS LEVEL2 + MODULE -> CSS는 그림에 대한 건데 하나의 스펙으로 관리하는것을 무리라는 주장이 나와 관심분야별로 Module이란 시스템을 넣어 사양을 모듈별로 관리하기로 함. 맥, 윈도우 등등의 것들을 하나의 단일 사양에서 관리하기 어려워 사양을 쪼개 모듈로 관리함. 그래서 LEVEL2의 각종 사양들이 모듈화 되어져 있다.\nCSS LEVEL 2.1 -> 이것을 기점으로 CSS에 있는 모듈들이 모두 CSS2로 고정 되었음. 여기까진 CSS LEVEL이 존재함. 여기에 나와있는 것들은 CSS 2.1 사양이라고 불러도 되는거들.\nCSS LEVEL2.1 Include LEVEL 3 Module -> 어떤 그래픽스 시스템은 고전이기 때문에 이미 확정된것들이 있음. 어떤건 발전하는 중이기 때문에 레벨업 될게 있음. 그래서 2.1에서 3으로 가는게 불가능 하였음. 2.1 모듈들을 보면 몇가지 것들이 레벨이 3이 됬었다. 우리가 흔히 부르는 CSS3은 CSS2.1에 포함되어있는 모듈들중에 레벨 3인 애들을 모아 부르는 것임. 공식 문서에는 CSS3은 존재하지 않음. 그 이후 Module level이란 말로 바뀐다.</p>\n<p>W3C가 영향력을 가질땐 아이폰 만들기 전임.\nWICG(WEb Platform Incubator community group)\nRICG(responsive issues community group)\n위의 두개가 W3C를 무시하고 브라우저에 탑재하기 시작함.</p>\n<h4 id=\"position\"><a href=\"#position\" aria-label=\"position permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Position</h4>\n<p>geometry의 left 또는 top을 결정할때 사용하는 추상적인 의미 체계.</p>\n<p>STATIC, RELATIVE, ABSOLUTE, FIXED, INHERIT\n위의 것들을 모두 계산 공식으로 볼 수 있음</p>\n<p>Static으로 줬을때랑 relative로 줬을때 계산하는 방법이 각각 다름. fixed number로 바꿀때 다 달라짐.</p>\n<h3 id=\"normal-flow\"><a href=\"#normal-flow\" aria-label=\"normal flow permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Normal Flow</h3>\n<p>position이 static이거나 relative일 경우에 적용된다. 나머지 셋은 normal flow에 들어가지 않음.</p>\n<h4 id=\"2가지-계산-방법\"><a href=\"#2%EA%B0%80%EC%A7%80-%EA%B3%84%EC%82%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2가지 계산 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2가지 계산 방법</h4>\n<p>밑의 둘은 어떻게 그릴건지 설명하는 공식과 원리이다.</p>\n<ol>\n<li>\n<p>block formatting context(bfc)</p>\n<ul>\n<li>block : 부모의 가로길이를 가득 채운 한 줄을 의미함. 그냥 가로 한줄을 다먹음. </li>\n<li>한줄을 다먹을떄 어떻게 계산하는가에 대한 이야기</li>\n<li>x는 부모의 시작이므로 0</li>\n<li>y만 신경쓰면 됨. 위의 블록의 height가 두번쨰 bfc의 y값임</li>\n<li>bfc의 높이는 안에있는 block들의 height의 합이 bfc의 height가 됨.</li>\n</ul>\n</li>\n<li>\n<p>Inline formatting context(ifc)</p>\n<ul>\n<li>inline : 나의 컨텐츠 크기만큼 가로를 차지하며</li>\n<li>첫번쨰 ifc의 가로길이만큼 떨어진 자리의 x가 다음 inline의 시작값.</li>\n<li>inline 요소들의 width의 합이 부모의 width 보다 크면 다음줄로 내려가는 기능이 있음.</li>\n<li>inline을 구성하는 요소중에 가장 height만큼 내려옴.</li>\n</ul>\n</li>\n</ol>\n<p>Relative position formatting context : 얘는 normal flow의 일부이긴 하지만 position 모델에서 정의하고 있음.</p>\n<p>IFC BFC는 어떻게 한줄을 먹는애를 그리는지 한줄이 아니라 점점인 애들이 그려지는 공식이다.</p>\n<p>IFC 영역이 생겨나도 block이 오면 즉시 IFC 영역이 종료되고 다음 block 요소가 만들어짐. 12분</p>","frontmatter":{"title":"2020-05-21 TIL","date":"May 21, 2020"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/til/2020-05-21/","previous":{"fields":{"slug":"/til/2020-05-05/"},"frontmatter":{"title":"2020-05-05 TIL","category":"TIL"}},"next":{"fields":{"slug":"/study/관계형 데이터베이스 실전 입문 1장/"},"frontmatter":{"title":"관계형 데이터베이스 실전 입문 1장","category":"DB"}}}}