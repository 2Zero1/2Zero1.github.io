{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"267a64ab-2cba-5a9e-8eb3-63f3d4bf0523","excerpt":"Your name Thank you for reading my resume. If you want to contact me, Please send me an email.","html":"<h1 id=\"your-name\"><a href=\"#your-name\" aria-label=\"your name permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Your name</h1>\n<div align=\"center\">\n<p><em>Thank you for reading my resume. If you want to contact me, Please send me an email.</em></p>\n</div>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}},{"node":{"id":"6717eb7a-7852-555c-991a-a5358af8acdb","excerpt":"pytest cache directory This directory contains data from the pytest’s cache plugin,\nwhich provides the   and   options, as well as the   fixture. Do not  commit…","html":"<h1 id=\"pytest-cache-directory\"><a href=\"#pytest-cache-directory\" aria-label=\"pytest cache directory permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pytest cache directory</h1>\n<p>This directory contains data from the pytest’s cache plugin,\nwhich provides the <code class=\"language-text\">--lf</code> and <code class=\"language-text\">--ff</code> options, as well as the <code class=\"language-text\">cache</code> fixture.</p>\n<p><strong>Do not</strong> commit this to version control.</p>\n<p>See <a href=\"https://docs.pytest.org/en/latest/cache.html\">the docs</a> for more information.</p>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"2104690d-8fc3-588f-890a-86467ac16139","excerpt":"","html":"","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"8dd5b1bf-7ffb-57e9-9d7e-3a739854f796","excerpt":"HTTP 약점 http의 약점 평문(암호화 하지 않은) 통신이기 때문에 도청이 가능하다. TCP/IP…","html":"<h4 id=\"http-약점\"><a href=\"#http-%EC%95%BD%EC%A0%90\" aria-label=\"http 약점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP 약점</h4>\n<ol>\n<li>\n<p>http의 약점</p>\n<ul>\n<li>평문(암호화 하지 않은) 통신이기 때문에 도청이 가능하다. TCP/IP 구조의 통신 내용은 전부 통신 경로의 도중에 엿볼 수 있다.</li>\n<li>\n<p>통신 상대를 확인하지 않기 때문에 위장 가능하다.</p>\n<ul>\n<li>누구나 리퀘스트 할 수 있기 때문에 실제로 의도한 송신자인지 알 수 없다.</li>\n</ul>\n</li>\n<li>완전성을 증명할 수 없기 때문에 변조가 가능하다. 리퀘스트나 리스폰스가 발신된 후에 상대가 수신할 때까지의 사이에 변조되었더라도 변조된 사실을 알 수없다. 공격자가 도중에 요청이나 응답을 빼았아 변조하는 공격인 man in the middle attack이 가능하다.</li>\n</ul>\n</li>\n<li>\n<p>위의 약점들의 보완 방법</p>\n<ol>\n<li>\n<p>도청</p>\n<ul>\n<li>통신 암호화</li>\n<li>컨텐츠 암호화</li>\n</ul>\n</li>\n<li>\n<p>위장</p>\n<ul>\n<li>상대를 확인하는 증명서</li>\n</ul>\n</li>\n<li>\n<p>완전성</p>\n<ul>\n<li>sha-1이나 md5 같은 해시함수로 해시값을 통신 확인.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>HTTPS = HTTP + 암호화 + 인증 + 완전성 보호</p>\n<ol>\n<li>\n<p>암호화 방식</p>\n<ul>\n<li>\n<p>공통키 암호화 방식(symetic)</p>\n<ul>\n<li>클라이언트 서버가 동일한 암호 key를 갖고 내용을 키로 암호화 하여 통신하는 방법.</li>\n</ul>\n</li>\n<li>\n<p>공개키 암호화 방식(asymentic)</p>\n<ul>\n<li>한쌍의 key pair를 가진다.public key , private key라고 한다.</li>\n<li>public key로 암호화 하면 private키로만 복호화가 가능하고, private key로 암호화 하면 public key로만 복호화가 가능하다.</li>\n<li>private key로 public key를 생성할 수 있으며 반대로는 불가능하다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>공통키를 어떻게 교환할까</p>\n<ul>\n<li>문제 : 공통키를 외부에 노출하면 누구나 암호화된 것을 볼 수 있기 때문에 전송의 문제가 된다.</li>\n<li>해결 : 서버가 개인키를 갖고, 공개키를 클라이언트에게 주고 클라이언트에게 개인키로 암호화된 공통키를 전송한다. 클라이언트는 공개키로 공통키를 얻어 통신할 수 있음.</li>\n<li>\n<p>장점</p>\n<ul>\n<li>공통키에 비해 공개키는 연산이 느리기 때문에 위와 같은 방법을 사용하면 공통키의 빠른 암호 복호화 속도로 통신이 가능함.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>HTTPS는 공통키 공개키 두가지 방법을 모두 사용한다.</li>\n<li>근데 실제로 완전성 보호에 대한 이야기는 나와있지 않는듯 하다.(이부분은 생각해보자.)</li>\n</ol>\n</li>\n<li>\n<p>공개키가 내가 원하는 서버의 공캐기인지 증명할 수 있는 증명서</p>\n<ul>\n<li>문제 : 클라이언트는 자신이 원하는 서버의 공개키인지 알수가 없다. 도중에 해커가 자신의 공개키를 넘겨줄 수도 있기 때문이다.</li>\n<li>해결 : 인증 기관(Certificate Authority)과 그 기관이 발행하는 공개키 증명서를 이용한다.</li>\n<li>\n<p>절차</p>\n<ol>\n<li>서버의 공개키를 인증기관에 등록한다</li>\n<li>인증 기관의 비밀키로 서버의 공개키에 디지털 서명(암호화)으로 공개키 증명서를 작성 등록한다.</li>\n<li>클라이언트는 서버의 공개키 증명서를 입수하고, 디지털 서명을 인증 기관의 공개키로 검증하고, 공개키가 진짜인지 확인한다.</li>\n<li>서버의 공개키로 암호화 해서 메시지를 서버에 전송한다.</li>\n<li>서버의 비밀키로 클라가 전송한 메시지를 복호화 한다.</li>\n</ol>\n</li>\n<li>인증 기관은 서버들이 신뢰성을 갖는지 확인하고, 사용자들이 볼 수 있도록 증명서에 회사의 정보를 넣기도 한다. 그것을 EV SSL 증명서라고 한다.</li>\n</ul>\n</li>\n<li>\n<p>클라이언트를 확인하는 클라이언트 증명서</p>\n<ul>\n<li>문제 : 서버도 클라이언트가 실제로 알고있는 클라이언트인지 증명할 수가 없다.</li>\n<li>해결 : 클라이언트를 확인하는 클라이언트 증명서를 사용한다.</li>\n<li>\n<p>단점</p>\n<ol>\n<li>증명서를 유료로 구입해야 된다.</li>\n</ol>\n</li>\n<li>사용 예 : 은행 공인인증서.</li>\n</ul>\n</li>\n<li>\n<p>인증기관에 전적으로 의존적</p>\n<ul>\n<li>결국 위의 모든 방법은 인증기간이 얼마나 성실히 일을 잘하냐에 따라 달려있다. 잘못된 인증을 하게 되면 문제가 될 수 있다.</li>\n<li>증명서를 무효화 하는 증며엇 취소 리스트(CRL)구조나 루트 인증기관을 클라이언트에서 삭제하는 대책이 있지만, 시간이 오래걸리고 그동안 피해자가 생길 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>쓰레기 인증 기관</p>\n<ul>\n<li>OpelSSL 등의 소프트웨어를 사용하면 누구든지 인증 기관을 구축할 수 있어서 서버 증명서를 발행할 수 있다.</li>\n<li>이것을 나야 나 증명서라고 하는데 위장의 가능성이 크다.</li>\n<li>마이너 인증 기관 또한 나야나 증명서가 될 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>HTTPS 통신 절차</p>\n<ol>\n<li>클라이언트가 SSL 통신을 시작함. 메시지에 클라이언트가 제공하는 SSL 버전과 암호 suite(사용할 수 있는 암호방식)로 불리는 리스트 등이 포함된다.</li>\n<li>server는 클라이언트와 같이 SSL 버전과 클라에서 받은 암호방식중 선택하여 알려준다.</li>\n<li>서버가 certificate 메시지를 송신한다. 메시지에는 공개키 증명서가 포함되있다.</li>\n<li>서버가 최초의 SSL negotiation 부분이 끝났음을 통지하는 메시지를 전송한다.</li>\n<li>Client Key Exchange 메시지로 응답하고, 메시지에는 통신을 암호화 하는데 사용하는 Pre-Master secret 이 포함되어져 있다. 이 메시지는 3의 공개키 증명서에서 꺼낸 공개키로 암호화 되어 있다.</li>\n<li>클라이언트는 Change Cipher Spec 메시지를 송신하며 이 메시지에는 이 메시지 이후의 통신은 암호키를 사용해서 진행한다는 것을 나타낸다.</li>\n<li>클라이언트는 finished 메시지를 송신하며 접속 전체의 체크값을 포함한다. 협상을 성공했는지 어떤지는 서버가 이 메시지를 복호화할 수 있는지 아닌지가 결정한다.</li>\n<li>서버도 change cipher spec 메시지를 전송한다.</li>\n<li>서버에서도 finished 메시지를 전송한다</li>\n<li>서버와 클라의 finished 메시지 교환이 완료 되면 SSL에 의해 접속이 확립된다. 이제부터 HTTP리퀘스트를 송신하고 통신한다.</li>\n<li>서버가 응답한다</li>\n<li>마지막에 접속을 끊을경우 close_notify메시지를 전송한다.</li>\n<li>어플리케이션 계층의 데이터를 송신할 때에는 MAC(Message Athentication Code)라고 부르는 메시지 다이제스트를 붙힐수 있다.</li>\n</ol>\n</li>\n<li>\n<p>TLS, SSL의 단점.</p>\n<ul>\n<li>connection을 맺는 절차가 길어 통신속도가 느릴 수 있다.</li>\n<li>암호화 복호화를 하는 시간으로 자원을 많이 소요한다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"022ef25e-b5d1-58b8-87d3-4dcfe82373d5","excerpt":"가변 길이 서브넷 마스크와 CIDR 서브넷 별로 서브넷마스크의 길이를 다르게 할 수 있다. 이 기술을 가변길이 서브넷 마스크라고 한다. 서브넷 마스크의 길이를 자유롭게 바꿀 수 있다면 서브넷 별로 접속할 컴퓨터의 수를 유연하게 결정할 수 있다. CIDR…","html":"<ol>\n<li>\n<p>가변 길이 서브넷 마스크와 CIDR</p>\n<ul>\n<li>서브넷 별로 서브넷마스크의 길이를 다르게 할 수 있다.</li>\n<li>이 기술을 가변길이 서브넷 마스크라고 한다.</li>\n<li>서브넷 마스크의 길이를 자유롭게 바꿀 수 있다면 서브넷 별로 접속할 컴퓨터의 수를 유연하게 결정할 수 있다.</li>\n<li>CIDR : 잘 이해가 안된다 .. 다시 공부 해봐야겠다.</li>\n</ul>\n</li>\n<li>\n<p>MAC 주소</p>\n<ul>\n<li>이더넷 등의 네트워크 하드웨어에 하나씩 할당되어 있는 주소로 원칙적으로는 다른 것과 중복되지 않는 유일한 값이다.</li>\n<li>위에서 이야기한 개체별로 사용하는 주소가 유일하다는 점이 반드시 보장되는것은 아니다.</li>\n<li>이더넷등의 네트워크 하드웨어는 통신 대상을 특정하기 위해 MAC주소를 사용함.</li>\n<li>현재 주류인 이더넷은 LAN 케이블에서 허브/스위치에 각 컴퓨터를 연결하여 사용함.</li>\n<li>AA-BB-CC-DD-EE-FF</li>\n<li>AA-BB-CC : 제조사를 나타내는 벤더 ID</li>\n<li>DD : 제품 기종을 나타내는 ID</li>\n<li>EE-FF : 시리얼 번호를 나타냄.</li>\n</ul>\n</li>\n<li>\n<p>ARP가 필요한 이유</p>\n<ul>\n<li>수신 대상이 다른 네트워크에 있는 경우 그 IP 패킷을 다음 라우터로 넘겨야 하는데 이때 라우터의 IP주소에서 MAC주소를 얻을 필요가 있다.</li>\n<li>위의 동작에 ARP 프로토콜이 사용된다.</li>\n<li>ARP로 IP주소에서 MAC주소를 얻은 후에 컴퓨터는 그 MAC 주소를 전송처로 지정된 이더넷 프레임을 사용해서 IP패킷을 대상 컴퓨터로 전송한다.</li>\n<li>ARP에는 브로드 캐스트가 사용된다.</li>\n<li>알고자 하는 IP주소를 포함한 ARP 요청을 브로드캐스트</li>\n<li>해당 IP를 사용중인 컴퓨터는 MAC 주소를를 요청자에게 직접 전송한다.</li>\n</ul>\n</li>\n<li>\n<p>도메인명</p>\n<ul>\n<li>인간이 다를 수 있는 범위에 맞춰 네트워크 상의 컴퓨터 명칭으로 도메인명을 쓴다.</li>\n<li>인터넷 도메인 명은 전세계에서 유일하도록 관리되며 총본산인데가 ICANN이다. 최상위 도메인을 관리한다.(TLD)</li>\n<li>도메인 구조는 www -> 3단계도메인 example ->2단계도메인(SLD), com -> 최상위 도메인(TLD)로 관리된다. www.example.com</li>\n</ul>\n</li>\n<li>\n<p>라우팅과 기본 게이트웨이</p>\n<ul>\n<li>라우터로 패킷을 전송하는 것을 라우팅이라고 한다.</li>\n<li>라우터는 전송 규칙에 따라 수행하며 라우팅 테이블을 이용한다.</li>\n<li>라우팅 테이블에는 ‘수신처의 네트워크’와 그’네트워크에 대한 발송 방법’이 등록되어있다.</li>\n<li>라우터는 패킷을 받으면 그 수신처로 표시되 있는 IP 주소에 서브넷 마스크를 적용해서 네트워크 주소를 추출한다.</li>\n<li>게이트웨이란 자신이 소속된 네트워크 이외에 보내려는 패킷에 대해 어딜로 보낼지 모를때의 전송처이다. 보낼 곳을 모르는 때에 우선 전송해두는곳이라고 생각하면 된다.</li>\n<li>일반적으로 기본 게이트웨이로 네트워크의 입출입 역할을 하는 라우터를 설정한다.</li>\n</ul>\n</li>\n<li>\n<p>정적 라우팅과 동적 라우팅</p>\n<ul>\n<li>새로운 네트워크가 추가되는 경우 등 네트워크의 접속 상태가 변하는 때에 그 변경에 따라 관련된 각 라우터의 라우팅 테이블을 수정할 필요가 생긴다</li>\n<li>\n<p>정적 라우팅</p>\n<ul>\n<li>위의 상황에서 네트워크 접속이 변경될 때마다 관련된 라우터 등의 라우팅 테이블을 수동으로 수정하는 방법이다.</li>\n<li>네트워크 규모가 작거나 구성변경이 없는경우 간단히 쓰이는 방법이다.</li>\n</ul>\n</li>\n<li>\n<p>동적 라우팅</p>\n<ul>\n<li>네트워크의 접속 라우터에 관한 정보를 라우터끼리 정기적 또는 필요에 따라 서로 교환하여 그 정보를 기반으로 라우팅 테이블을 자동 관리한다.</li>\n<li>신규 네트워크가 연결되면 그 네트워크의 접점이 되는 라우터가 인접해 있는 각 라우터로 새로운 네트워크의 정보를 전달하고 수신한 라우터는 필요에 따라 그 신규 라우터의 정보를 인접 라우터로 전달한다. 이렇게 확산 시키고 각 라우터가 필요한 규칙은 라우팅 테이블에 설정한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>라우팅 프로토콜</p>\n<ul>\n<li>라우팅 테이블을 동적으로 갱신하는 동적 라우팅에서 사용하는 프로토콜을 라우팅하는 프로토콜이다.</li>\n<li>\n<p>라우팅 프로토콜로 최적 경로를 구하고 여기서 말하는 최적 경로는 네트워크 내를 따라가는 데 있어 최소 경로를 의미한다.</p>\n<ul>\n<li>단순히 통신하는 라우터의 수가 적은 경우 최적경로를 구하는 프로토콜 : RIP/RIP2</li>\n<li>도중에 통신하는 네트워크의 속도 등도 고려해서 선택하는 프로토콜 : OSPF</li>\n</ul>\n</li>\n<li>\n<p>라우터는 크게 IGP와 EGP로 나뉜다.</p>\n<ul>\n<li>IGP(interior Gateway Protocol)</li>\n<li>EGP(Exterior Gateway Protocol)</li>\n</ul>\n</li>\n<li>\n<p>AS(Autonomous System)은 한개의 ISP 또는 대기업의 대규모 네트워크를 칭한다.</p>\n<ul>\n<li>IGP는 AS 내의 라우팅에 이용하고 EGP는 주로 AS간의 라우팅에 이용한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>DHCP(Dynamic Host Coniguration Protocol)</p>\n<ul>\n<li>네트워크에 접속되어 있는 컴퓨터에 대해 필요한 네트워크 설정 정보를 자동으로 배포하기 위한 구조다.</li>\n<li>컴퓨터의 IP주소, 서브넷마스크, 기본 게이트웨이, DNS서버의 IP 주소 등을 설정할 수 있고 컴퓨터가 네트워크에 접속하는데 필요한 정보는 대부분 다 포함한다.</li>\n<li>DHCP는 아직 컴퓨터에 IP주소 등의 네트워크 설정이 되어 있지 않은 시점에 사용하므로 IP 주소를 지정해서 하는 일반적인 통신을 이용하지 않는다.</li>\n<li>DHCP discover(브로드 캐스트) -> DHCP offer(1:1통신) -> DHCP request(offer에 받은 후보를 사용한 다는 사실을 알림) -> DHCP Ack</li>\n</ul>\n</li>\n<li>\n<p>NAT와 NAPT</p>\n<ul>\n<li>\n<p>NAT(Network Address Translation)</p>\n<ul>\n<li>몇개의 전역 IP주소를 라우터에 할당해 두고 LAN 내의 컴퓨터가 인터넷에 접속할때 이 중 하나를 이용하여 통신하는 방법.</li>\n<li>라우터가 갖고 있는 전역 IP주소의 수로 제한된다.</li>\n</ul>\n</li>\n<li>\n<p>NAPT(Network Address Port Translation)</p>\n<ul>\n<li>IP 주소의 변환과 동시에 포트번호도 변환하고 한개의 전역 IP주소를 여러대의 컴퓨터에서 공용으로 사용할 수 있게하는 기술</li>\n<li>인터넷에 송출할 때 자신의 IP 주소와 port 번호의 조합을 라우터의 전역 IP주소와 라우터가 관리하는 포트번호의 조합으로 변환.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"78720817-4dd8-5490-9be4-12bc8cedd5d5","excerpt":"인터넷의 기기와 구성 이더넷은 전 세계에서 폭넓게 이용되고있는 네트워크 규격이다. 현대 컴퓨터에 탑재되어 있는 유선 네트워크 인터페이스는 거의 100%가 이더넷이다. 허브/스위치를 몇 단계 접속하는 것을 cascade…","html":"<ol>\n<li>\n<p>인터넷의 기기와 구성</p>\n<ul>\n<li>이더넷은 전 세계에서 폭넓게 이용되고있는 네트워크 규격이다.</li>\n<li>현대 컴퓨터에 탑재되어 있는 유선 네트워크 인터페이스는 거의 100%가 이더넷이다.</li>\n<li>허브/스위치를 몇 단계 접속하는 것을 cascade접속이라고 한다.</li>\n<li>이더넷은 접속을 작게 분할해서 프레임이라고 부르는 형태로 만들고 이걸 전기신호나 광신호로 변환해서 통신 매체에 전송한다.</li>\n</ul>\n</li>\n<li>\n<p>L2 스위치</p>\n<ul>\n<li>일반적으로 허브, 스위치, L2스위치는 거의 동일한 의미로 사용된다.</li>\n<li>L2스위치는 받아들인 이더넷 프레임의 수신처 MAC주소를 알아내 그 MAC주소를 가진 컴퓨터가 접속되어 있는 포트로 이더넷 프레임을 송출한다.</li>\n<li>위와 같이 할 수 있는 이유는 포트와 MAC주소의 대응 여부를 MAC주소 테이블에 기록하고 있기 때문이다.</li>\n<li>등록되지 않은 컴퓨터 앞으로 이더넷 프레임을 보내는 경우 L2 스위치는 프레임이 도달한 포트 이외의 포트 전체에 그 프레임을 송출한다. 이 동작을 플러딩(flooding)이라고 한다.</li>\n<li>플러딩을 한 후 이걸 수신한 컴퓨터가 어떤 형태의 송신을 하기 위해 이더넷 프레임을 L2스위치로 송출하면 여기에 포함된 송신처 MAC주소와 포트 번호가 MAC 주소 테이블에 등록된다.</li>\n<li>L3 스위치는 그 이름대로 레이어3, 즉 IP 패킷을 처리하는 스위치다. 라우터와 L3 스위치는 기본적으로 동일한 기능을 갖는다고 봐도 무방하다.</li>\n<li>L4 스위치는 즉 TCP 나 UDP에서 패킷을 할당하는 기능을 가지며 부하 분산 등의 목적을 갖는다.</li>\n<li>L3 스위치는 LAN 를 많이 갖고 있어 단말기가 많이 설치된 네트워크의 말단에 가까운 영역에서도 이용하기 쉽다는 특징을 갖지만 L3 스위치에 문제가 생기면 라우터 기능과 스위치 기능 양쪽 다 못쓰게 된다.</li>\n</ul>\n</li>\n<li>\n<p>무선 LAN</p>\n<ul>\n<li>무선 LAN은 LAN 케이블 대신 무선을 사용해서 네트워크에 접속하는 기술이다.</li>\n<li>무선 LAN은 유선 LAN보다 보안이 약하다.</li>\n<li>본래 무선 LAN 그 자체는 유선 접속을 무선으로 치환해서 허브/스위치에서의 접속과 동일한 기능(브릿지)을 제공하는 것이다.</li>\n</ul>\n</li>\n<li>\n<p>포트 기반 VLAN과 태그 기반 VLAN</p>\n<ul>\n<li>물리적으로는 한 개의 네트워크를 논리적으로 여러 개의 네트워크로 분할하는 기술을 VLAN(virtual LAN)이라고 한다.</li>\n<li>포트 기반 LAN은 스위치나 라우터에 탑재되어 있는 포트를 그룹 몇개로 지정해서 그 그룹에 속한 포트군을 독립시켜 하나의 LAN처럼 보이게 하는 기술이다.</li>\n<li>태그 기반 VLAN은 LAN 케이블 한개 내에 여러개의 LAN 정보를 흘려 보내는 기술이다. 이더넷 프레임 내에 VLAN 를 나타내는 정보(태그)를 내장함으로써 LAN 케이블 한개에 흘리는 정보를 VLAN으로 구분한다.</li>\n</ul>\n</li>\n<li>\n<p>VPN이란</p>\n<ul>\n<li>VPN(virtual Private Network)은 인터넷 등 기존 네트워크 내에 새로운 가상 네트워크를 만드는 기술이다.</li>\n<li>VPN을 이용하는 경우 만의 하나 도청 등을 당하는 상황에서도 일정 수준의 기밀을 보장하도록 암호화를 병용한다.</li>\n<li>터널 기술은 어떤 통신회선 내에 만들어낸 가상 통신 회선이다. 터널을 여러 개 만들면 통신 회선 한 개를 여러 개의 가상화 통신 회선으로 이용할 수 있게 된다.</li>\n</ul>\n</li>\n<li>\n<p>가상화</p>\n<ul>\n<li>가상화란 물리적인 네트워크나 컴퓨터를 사용해서 논리적인 네트워크나 컴퓨터를 만들어 내는 기술이다.</li>\n<li>가상화로 물리적인 장비 한 대 내에 여러 대의 논리적인 장비를 만들어내거나 반대로 여러 대의 물리적인 장비를 한대의 논리적인 장비로 보이게 할 수 있다.</li>\n<li>가상화의 장점으로 물리적인 장비의 대수나 장소에 제약을 받지 않고 기능을 이용할 수 있다는점. 장비의 처리 능력을 효과적으로 사용할 수 있다는점. 장비 각각이 갖는 것 이상의 능력을 낼 수 있다는점 . 필요에 따라 규모 확장/축소가 쉽다는 점이 있다.</li>\n</ul>\n</li>\n<li>\n<p>클라우드</p>\n<ul>\n<li>클라우드의 특징은 이용자가 직접 web 화면 등을 통해 컴퓨터, 네트워크, 각종 서비스를 자유롭게 조합해서 필요한 시스템이나 서비스를 구성한 후 이걸 네트워크를 경유하여 이용할 수 있다는 점이다. 이 배경에는 가상화 기술이 중요한 역할을 한다.</li>\n<li>Iaas(Infrastructure as a Service)</li>\n<li>Paas(PlatForm as a Service)</li>\n<li>SaaS(Software as a Service)</li>\n</ul>\n</li>\n<li>\n<p>웹을 지탱하는 기술</p>\n<ul>\n<li>하이퍼텍스트에는 문서 내에 하이퍼링크라고 불리는 다른 문서에 대한 참조가 있고 하이퍼링크를 따라가면 어러 개의 문서를 연관 지어서 전체적으로 거대한 정보를 나타낼 수 있다.</li>\n<li>URL : Web에 존재하는 문서나 각종 파일의 위치를 표시하는데 사용됨</li>\n<li>URL은 크게 나눠 scheme, host, path 세부분으로 나뉜다.</li>\n<li>\n<p>정적 컨텐츠는 미리 제작해서 서버에 보존되어 있는 컨텐츠이다.</p>\n<ul>\n<li>항상 동일하도록 유지되면 좋은것에 사용된다.</li>\n</ul>\n</li>\n<li>\n<p>동적 컨텐츠는 읽기 요청할 때마다 프로그램이 동작해서 만들어내는 커텐츠이다.</p>\n<ul>\n<li>접속할 때마다 결과가 바뀔 가능성이 있는 것에 사용한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>HTTP</p>\n<ul>\n<li>HTTP(HypertextTransfer Protocol)는 web서버와 web클라이언트 간에 web 정보를 주고받기 위한 프로토콜이다.</li>\n<li>\n<p>이전에 무엇을 요청했는가에 따라 응답이 변하는 일이 없이 동일한 조건이라면 요청에 대해서든 응답이 상항 동일하다고 나오는데 사실 method에 따라 다르다. post는 다를 수 있음.</p>\n<ul>\n<li>서버의 정보가 안전한 것은 head와 get이다.</li>\n<li>멱등성을 가지는 메서드는 get delete put head 등이 있다.</li>\n</ul>\n</li>\n<li>HTTP 요청을 TCP/IP로 서버에 보내면 서버는 이걸 받아서 요청 내용을 처리하고 그 결과를 HTTP dmdekqdmfh qhsosek.</li>\n<li>요청에는 요청 대상, 헤더필드, 메시지 본체의 각 부분이 있으며 하고자 하는 조작 요청을 대상 메서드로 지정한다.</li>\n<li>응답에는 상태값, 헤더 필드, 메시지 본체의 각 부분이 있으며 처리 결과는 상태코드로 표시된다.</li>\n</ul>\n</li>\n<li>\n<p>HTTPS와 SSL/TLS</p>\n<ul>\n<li>HTTPS는 HTTP통신에서의 통신을 안전하게 보호하기 위한 구조다.</li>\n<li>포트번호 443이 할당되어져 있다.</li>\n<li>HTTPS는 SSL(Secure Sockets Layer)/TLS(Transport Layer Security)라고 불리는 프로토콜이 만들어내는 안전한 연결 방법을 사용하고 이를 기반으로 HTTP에 따른 통신을 한다.</li>\n<li>HTTP의 요청이나 응답 내용은 암호화 되고 도중에 누가 통신내용을 변경했는지 검사할 수 있고 접속한 WEB서버가 진짜인지 검증할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>이외의 어플리케이션 계층 프로토콜</p>\n<ul>\n<li>STMP : 전자 메일 전송에 사용되는 프로토콜이다.</li>\n<li>\n<p>POP3와 IMAP4는 메일함을 읽는 프로토콜이다.</p>\n<ul>\n<li>POP3는 메일 함의 메일을 PC에 넣고 PC내에서 정리나 열람을 하는 형태</li>\n<li>IMAP4는 메일을 서버상의 메일함에 둔 상태에서 정리나 열람을 하는 형태</li>\n</ul>\n</li>\n<li>\n<p>FTP 파일을 전송하기 위한 프로토콜</p>\n<ul>\n<li>전송 제어를 위해 21, 20 포트를 사용</li>\n<li>한개는 실제 데이터를 전송하는 것 나머지 하나는 제어하기 위한 접속은 독립되어 있으므로 전송 도중 중지시키는 등의 컨트롤을 하기 쉬워짐</li>\n</ul>\n</li>\n<li>\n<p>액티브 모드와 패시브 모드</p>\n<ul>\n<li>액티브 모드는 아무것도 지정하지 않고 FTP 프로토콜에서는 FTP 서버가 클라이언트에게 연결 하려고 하는데 가정이나 사무실 네트워크는 외부에서 부정 침입을 막기 위해 외부에서 내부로의 접속을 금지한다.</li>\n<li>액티브 모드의 문제점을 해결하기 위해 FTP 클라이언트 측에서 두번 째 접속(전송데이터용)을 연결하는 패시브 모드가 설정된다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>SSH(secure shell)</p>\n<ul>\n<li>서버나 네트워크 기기에 접속해서 대상을 CUI로 조작하는 데 사용하는 프로토콜 및 그걸 하기 위한 프로그램의 명칭이다.</li>\n<li>암호화 되어 있어서 안전하게 대상을 조작할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>DNS</p>\n<ul>\n<li>IP 주소 대신 컴퓨터에 부여된 명칭인 도메인명을 쓴다.</li>\n<li>도메인명에서 IP주소를 찾는 것(정방향), 혹은 반대로 IP주소에서 도메인 명을 찾는것(역방향)을 이름 분석(name resolution)이라 한다.</li>\n<li>DNS를 구성하는 서버에는 컨텐츠서버, 캐시서버 두 종류가 있다.</li>\n</ul>\n</li>\n<li>\n<p>NTP</p>\n<ul>\n<li>네트워크에 연결된 컴퓨터의 시간을 맞추기 위한 프로토콜</li>\n<li>NTP로 시간 정보를 제공하는것은 NTP 서버다.</li>\n<li>NTP 서버는 계층적인 구조를 취한다.</li>\n</ul>\n</li>\n<li>\n<p>HTTP 프락시</p>\n<ul>\n<li>웹 서버와 직접 통신하지 않고 어떤 형태의 중계용 컴퓨터를 거쳐 인터넷과 주고 받는 형태.</li>\n<li>위와 같이 사이에 두고 통신 내용을 전하는 컴퓨터를 프락시라고 한다.</li>\n<li>프락시가 제공하는 기능으로 컨텐츠의 케시와 바이러스 검출 유해사이트 차단이 있다.</li>\n</ul>\n</li>\n<li>\n<p>서비스 연계와 REST API</p>\n<ul>\n<li>네트워크를 경유하여 호출해서 사용하는 서비스를 제공하는 사업자나 서비스를 ASP라고 함</li>\n<li>ASP 나 SaaS/PaaS 등의 기능을 네트워크를 경유해서 호출할 때 많이 사용되는 것이 HTTP이다.</li>\n<li>HTTP를 사용해서 네트워크 경유로 기능을 호출하거나 XML이나 JSON으로 결과를 돌려주는 형태를 일반적으로 REST API라고 함.</li>\n</ul>\n</li>\n<li>\n<p>HTML의 구조와 XML</p>\n<ul>\n<li>HTML에서 사용하는 문서를 기술하는 언어이다. 태그라고 불리는 명령어를 사용해서 텍스트 파일 내에 표시하므로 마크업 언어라고도 한다.</li>\n<li>XML은 마크업 언어를 정의하기 위한 범용적인 규칙을 정의하여 작성 규칙이 엄격하다.</li>\n<li>HTTP 요청은 한 번에 한 개의 요소만 취하므로 여러 번 주고 받으며 복수개의 표시 요소를 읽어들인다.(ex 이미지)</li>\n</ul>\n</li>\n<li>\n<p>문자코드</p>\n<ul>\n<li>컴퓨터가 다룰 수 있는 데이터는 그 구조에서 수치로 제한된다.</li>\n<li>수치와 문자를 대응시킨 문자 코드가 정의되어 있어 우리는 컴퓨터에서 읽거나 쓰거나의 작업을 할 수 있다.</li>\n<li>통신으로 주고받을때나 컴퓨터 내에서 처리 할 땐 정보나 문자에 대응하는 수치의 집합으로 처리된다.</li>\n<li>문자에 대응하는 숫자를 문자 코드라고 부른다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"","date":null,"lang":null}}},{"node":{"id":"c6a70bc1-dc56-502a-a076-2fd906fac083","excerpt":"1계층의 역할과 개요 케이블이 연결되어 있는 기기에 신호를 전달하는 것이 1계층의 역할이다. 데이터를 전달하는 일은 1계층의 역할이고, 전달하기 전 과 전달하기 후의 일을 하는것이 2계층 이상의 역할이다. 케이블에는 전기신호를 사용하는 동선(UTP(Unshielded Twist Pair…","html":"<ul>\n<li>\n<p>1계층의 역할과 개요</p>\n<ol>\n<li>케이블이 연결되어 있는 기기에 신호를 전달하는 것이 1계층의 역할이다.</li>\n<li>데이터를 전달하는 일은 1계층의 역할이고, 전달하기 전 과 전달하기 후의 일을 하는것이 2계층 이상의 역할이다.</li>\n<li>케이블에는 전기신호를 사용하는 동선(UTP(Unshielded Twist Pair cable))과 광신호를 사용하는 광섬유가 있다.</li>\n<li>Lan용 케이블에 접속하기 위한 NIC(Network Interface Card)는 컴퓨터에서 사용되는 일반적인 인터페이스다.</li>\n<li>가정용 PC에는 거의 NIC가 붙어 있고, WAN 를 부착하지 않고 DCE(Data Circuit terminating Equipment)라는 별도의 신호 변환기를 이용한다.</li>\n</ol>\n</li>\n<li>\n<p>신호와 충돌</p>\n<ol>\n<li>컴퓨터와 통신 매체를 중개하는 인터페이스는 비트를 신호로 신호를 비트로 변환하는 기기다.</li>\n<li>\n<p>신호에 발생하는 문제</p>\n<ul>\n<li>\n<p>신호의 감쇠</p>\n<ul>\n<li>긴 케이블을 지나는 동안 신호가 약해지는 현상</li>\n</ul>\n</li>\n<li>\n<p>노이즈, 간섭</p>\n<ul>\n<li>어떤 원인에 의해 형태가 무너져 버리는 건데, 그렇게 되면 신호의 진폭을 정확하게 읽을 수 없게 될 가능성이 있다.</li>\n</ul>\n</li>\n<li>\n<p>충돌(Collision)</p>\n<ul>\n<li>멀티 액세스 네트워크 등에서 일어날 수 있는 문제로, 신호가 보내지고 있는 도중에 다른 신호를 보내는 경우 발생하게 됨. A라는 컴퓨터가 신호를 보내고 있을 때 B라는 컴퓨터가 또 다른 신호를 보내는 상황이다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>허브</p>\n<ol>\n<li>허브에 케이블로 연결되어 있는 기기는 동일 케이블에 연결되어 있는 것과 같은 취급을 받게됨.</li>\n<li>\n<p>허브의 기능</p>\n<ul>\n<li>신호의 증폭과 재생. 감쇠에 의해 붕괴된 신호를 본래의 형태로 증폭 또는 재생한다.</li>\n<li>복수의 기기를 연결해서 네트워크를 구축하는 기능. 허브에 연결되어 있는 기기끼리 신호를 주고 받을 수 있게 된다. 포트의 수보다 연결될 컴퓨터가 많다면, cascade connection(연속 접속)을 한다. 같은 케이블에 있는 취급을 받는다.</li>\n<li>허브끼리 접속함으로써 신호가 도달하는 범위를 넓힐 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>충돌 도메인</p>\n<ul>\n<li>허브는 수신한 신호에 대해 어떤 제어도 하지 않는다.</li>\n<li>허브는 수신한 포트 이외의 모든 포트에 수신한 신호를 송신 하는데, 이를 flooding이라고 한다.</li>\n<li>그러므로 여럿이 케이블을 사용하는 상황에서 동시에 신호를 보내거나 받으려고 할 경우, 충돌이 일어날 가능성이 있다.</li>\n<li>신호를 송신하면 충돌이 발생할지도 모르는 범위를 충돌도메인이라고 한다.(collision domain)</li>\n<li>그래서 충돌 도메인은 작아야 한다.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>2계층의 역할과 개요</p>\n<ol>\n<li>2계층은 신호가 닿는 범위에서의 데이터 전송에 관한 규정이다.</li>\n<li>신호가 닿는 범위로는 멀티액세스 네트워크라면 허브로 연결되어 있는 기기 전체, point to point 네트워크라면 서로 연결된 두대 다시말해 세그먼트 범위에서의 데이터 전송 범위를 이야기한다.</li>\n<li>\n<p>프레이밍과 신호의 동기</p>\n<ul>\n<li>1계층이 신호를 전달하는 것이라면 2계층은 신호가 닿는 범위 즉 세그먼트 범위에서 데이터를 어떻게 송수신 할지에 대한 것이다.</li>\n<li>\n<p>1계층에서 다루는 신호랑 케이블 등에 따라 2개층의 규격이 달라진다.</p>\n<ul>\n<li>LAN용고 WAN용이 있고, 3계층 이상에선 둘다 동일한 규칙을 사용하지만 2계층 까지는 사용하는 규칙이 다르다.</li>\n</ul>\n</li>\n<li>LAN의 사실 표준은 이더넷(Ethernet)이다.</li>\n<li>1계층에서 주고받는 신호를 비트화해 거기에 의미를 갖게 하는것을 프레이밍이라고 한다.</li>\n<li>프레이밍에서 가장 앞에 preamble을 넣어 시금부터 프레임이 시작된다는 신호를 준다.</li>\n<li>송신이나 수신측에서 서로 보내고 읽는 타이밍이 안맞아 정보를 잘 받지 못할 수가 있는데 그때 데이터 통신 직전에 프리엠블을 보내 타이밍을 비동기적으로 맞추는 기법을 사용한다.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>2계층 주소와 이더넷</p>\n<ol>\n<li>Address : 데이터를 보내는 상대와 자신을 특정하는 데이터, 이더넷에서 어떻게 신호가 도달하는 범위에서 데이터를 송수신하는지 핵심이 된다.</li>\n<li>\n<p>데이터 전송방법</p>\n<ul>\n<li>\n<p>유니캐스트(Unicast)</p>\n<ul>\n<li>1:1 통신</li>\n</ul>\n</li>\n<li>\n<p>브로드캐스트(Broadcast)</p>\n<ul>\n<li>전원, 즉 모두에게 메시지를 보내는 데이터 통신</li>\n</ul>\n</li>\n<li>\n<p>멀티캐스트(multicast)</p>\n<ul>\n<li>1대 다수로 지정된 복수의 기기로 메시지를 보내는 데이터 통신.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>MAC (Media Access Control Address)주소 : 인터페이스에 지정된 고정 주소. 48비트 값으로 4비트마타 16진수로 고쳐쓴다.</li>\n</ol>\n</li>\n<li>\n<p>이더넷</p>\n<ol>\n<li>헤더에는 수신처의 주소, 송신처의 주소, 페이로드의 내용을 식별하는 타입이 붙고, 그다음 페이로드 그 다음 트레일러에 에러를 체크하는 FCS(Frame Check Sequence)가 있다.</li>\n<li>FCS에서 에러를 발생하면 그 프레임은 파기하고 파기했다는 것을 송신측에 알리지 않는다.</li>\n<li>허브를 사용한 멀티 액세스 네트워크의 경우 신호, 즉 데이터는 모든 기기에 도달하게 되고, 이더넷에서는 수신한 프레임의 수신처 MAC 주소를 보고 자기에게 온 것외의 다른 프레임을 파기한다.</li>\n<li>\n<p>CSMA/CD(Carrier Sense Multiple Access/Collision Detection) 라는 액세스 제어</p>\n<ul>\n<li>이더넷에서는 신호를 보내는 타이밍을 겹치지 않도록 비켜나게 함으로 써 되도록 충돌이 일어나지 않도록 한다.</li>\n<li>CS(신호감지)는 누군가가 송신 중이라면 송신하지 않는다.</li>\n<li>MA(다중 액세스) 는 아무도 송신하고 있지 않다면 송신할 수 있다.</li>\n<li>CD(충돌 검사)는 송신 후에 충돌이 일어나면 다시 재수행한다.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>스위치</p>\n<ol>\n<li>충돌을 피하기 위해 신호를 보내는 타이밍이 겹치지 않도록 엇갈리게 하는 방법을 위해서 배웠고 이번 장에서는 신호가 지나는 길을 나누는 방법을 배운다.</li>\n<li>신호가 지나는 길을 나누기 위한 기기가 스위치(switch)이다. 허브 대신 사용한다.</li>\n<li>스위치를 사용하면 케이블상에서는 자신이 송신한 신호랑 상대에게서 보내 온 신호가 동시에 지나가도 충돌은 발생하지 않는다.</li>\n<li>\n<p>수신한 프레임을 따로따로 보낼 수 있도록 충돌을 막는 방법으로 MAC주소 필터링과 버퍼링 두가지 방식이 있다.</p>\n<ul>\n<li>\n<p>MAC 주소 필터링</p>\n<ol>\n<li>학습과 스위칭이라는 동작으로 이루어진다.</li>\n<li>수신한 프레임의 송신처를 MAC주소를 수신한 포트와 연관지어 테이블에 저장한다. 이를 Adress Table이라고 한다.</li>\n<li>프레임의 수신처 MAC주소를 보고 그 MAC주소가 있는 포트만 프레임을 송신한다.</li>\n<li>그결과 수신처가 다른 프레임이 동시에 스위치에 도달해도 충돌이 발생하지 않는다.</li>\n<li>하지만 학습전의 MAC주소 수신의 프레임을 수신한 경우와 수신처가 1개가 아닌 멀티캐스트와 브로드캐스트 수신처인 프레임을 수신한 경우 허브와 마찬가지로 플러딩을 하고, 맥 주소를 가진 기기는 스위치에게 신호를 보내 라우팅 테이블에 저장한다.</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>\n<p>전이중 이더넷</p>\n<ol>\n<li>그렇다면 수신처가 같은 프레임이 동시에 도달하면 어떻게 해야될까? 그것은 버퍼링으로 해결할 수 있다.</li>\n<li>충돌할 것 같은 프레임을 버퍼에 일시적으로 저장해 두는 방법이다.</li>\n<li>버퍼의 용량이 부족하다면 백프레셔 또는 IEEE802.3x를 사용하여 처리</li>\n<li>스위치를 사용하면 충돌 도메인을 스위치에 의해 분할 할 수 있다.</li>\n<li>반이중통신(Half-Duplex) : 누군가가 송신중일 때는(본인은 수신중) 송신 불가능</li>\n<li>전이중통신(Full-Duplex) : 동시에 송신과 수신을 할 수 있는 방식.</li>\n<li>스위치를 사용할 경우 충돌을 염려할 필요가 없고 SCMA/CD를 사용할 필요가 없다. 그래서 전이중 통신이 가능하다.</li>\n<li>하지만 여러 컴퓨터와 연결된 스위치와 여러컴퓨터가 연결된 허브가 연결되어져 있다면 반이중 방식밖에 사용할 수없다.</li>\n<li>전이중 방식을 사용하기 위해선 둘다 스위치로써 연결되어져야 한다.</li>\n</ol>\n</li>\n</ul>","frontmatter":{"title":"","date":null,"lang":null}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}