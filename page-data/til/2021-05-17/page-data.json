{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2021-05-17/","result":{"data":{"site":{"siteMetadata":{"title":"Zero1's Note","author":"Zero1","siteUrl":"https://github.com/2Zero1","comment":{"disqusShortName":"2Zero1","utterances":"2Zero1 Blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"bbf5167e-3f3a-5408-8a38-e9c9b2de6a74","excerpt":"fact 면접을 보기 위해 서울을 나갔다왔다. iterator, generator 정리 뇌를 자극하는 알고리즘 tree 부분 읽기 12가지 인생의 법칙 독서 feelings TIL을 단순히 내용을 정리하는 부분으로 사용하고 있는 것 같다. 내 의견이나 느꼈던 부분에 대해 작성하면 좋을것 같다고 생각했다. finding object…","html":"<ol>\n<li>\n<p>fact</p>\n<ul>\n<li>면접을 보기 위해 서울을 나갔다왔다.</li>\n<li>iterator, generator 정리</li>\n<li>뇌를 자극하는 알고리즘 tree 부분 읽기</li>\n<li>12가지 인생의 법칙 독서</li>\n</ul>\n</li>\n<li>\n<p>feelings</p>\n<ul>\n<li>TIL을 단순히 내용을 정리하는 부분으로 사용하고 있는 것 같다. 내 의견이나 느꼈던 부분에 대해 작성하면 좋을것 같다고 생각했다.</li>\n</ul>\n</li>\n<li>\n<p>finding</p>\n<ul>\n<li>\n<p>object 7장 객체 분해</p>\n<ul>\n<li>문제를 해결하기 위해서 장기기억에서 단기기억으로 옮겨와야 한다. 그러나 문제 해결에 필요한 요소의 수가 단기 기억의 용량을 초과하는 순간 문제 해결 능력은 급격하게 떨어진다. 이를 인지 과부하(cognitive overload)라고 한다.</li>\n<li>위의 문제를 해결하기 위해 한번에 다뤄야 할 정보의 수를 줄이고 본질적인 정보만 남겨 세부사항을 걸러내서 문제를 단순화할 수 있다. 이처럼 불필요한 정보를 제거하고 현재의 문제 해결에 필요한 핵심만 남기는 작업을 추상화라고 부른다.</li>\n<li>가장 일반적인 추상화 방법은 한 번에 다뤄야 하는 문제의 크기를 줄이는 것인데, 큰 문제를 해결 가능한 작은 문제로 나누는 작업을 분해(decomposition)라고 부른다.</li>\n<li>분해의 목적은 큰 문제를 인지 과부하의 부담없이 단기 기억안에서 한 번에 처리할 수 있는 규모의 문제로 나누는 것이다.</li>\n<li>\n<p>프로시저 추상화와 데이터 추상화</p>\n<ul>\n<li>\n<p>프로그래밍 패러다임은 프로그래밍을 구성하기 위해 사용하는 추상화의 종류와 이 추상화를 이용해 소프트웨어를 분해하는 방법의 두 가지 요소로 결정된다.</p>\n<ul>\n<li>\n<p>procedure abstraction(프로시저 추상화)</p>\n<ul>\n<li>소프트웨어가 무엇을 해야하는지 추상화 한다.</li>\n<li>functional decomposition(기능 분해) 또는 알고리즘 분해라고도 한다.</li>\n</ul>\n</li>\n<li>\n<p>data abstraction(데이터 추상화)</p>\n<ul>\n<li>소프트웨어가 무엇을 알아야 하는지를 추상화한다.</li>\n<li>\n<p>종류</p>\n<ol>\n<li>데이터를 중심으로 타입을 추상화하는 방법(type abstraction)으로 abstract data type(추상 데이터 타입)이라고 부른다.</li>\n<li>\n<p>데이터를 중심으로 프로시저를 추상화(procedure abstraction)로 Object-Orient(객체지향)이라고 부른다.</p>\n<ul>\n<li>지금까지 객체지향 패러다임을 책임을 수행하는 자율적인 객체들의 협력 공동체를 구축하는 것으로 이야기했는데, 여기서 ‘역할과 책임을 수행하는 객체’가 바로 객체지향 패러다임이 이용하는 추상화이다.</li>\n<li>프로그래밍 언어의 관점에서 객체지향이란 데이터를 중심으로 데이터 추상화와 프로시저 추상화를 통합한 객체를 이용해 시스템을 분해하는 방법이다.</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>소프트웨어는 데이터를 이용해 정보를 표현하고 프로시저를 이용해 데이터를 조작한다.</li>\n<li>프로그래밍 패러다임이란 적절한 추상화의 윤곽을 따라 시스템을 어떤 식으로 나눌것인지를 결정하는 원칙과 방법의 집합이다.</li>\n<li>시스템을 분해하는 방법을 결정하려면 먼저 프로시저 추상화를 중심으로 할것인지, 데이터 추상화를 중심으로 결정해야한다.</li>\n<li>\n<p>프로시저 추상화와 기능 분해</p>\n<ul>\n<li>기능 분해의 관점에서 추상화의 단위는 프로시저이며 시스템은 프로시저를 단위로 분해된다.</li>\n<li>프로시저는 반복적으로 실행되거나 거의 유사하게 실행되는 작업들을 하나의 장소에 모아놓음으로써 로직을 재사용하고 중복을 방지할 수 있는 추상화 방법이다.</li>\n<li>프로시저 중심의 기능 분해 관점에서 시스템은 입력 값을 계산해서 출력 값을 반환하는 수학의 함수와 동일하다. 시스템은 필요한 더 작은 작업으로 분해될 수 있는 하나의 커다란 메인함수다.</li>\n<li>전통적인 기능 분해 방법은 하향식 접근법(Top-Down Approach)를 따른다.</li>\n<li>기능 분해 방식은 기능을 중심으로 필요한 데이터를 결정한다.</li>\n<li>기능 분해를 위한 하향식 접근법은 먼저 필요한 기능을 생각하고 이 기능을 분해하고 정제하는 과정에서 필요한 데이터의 종류와 저장 방식을 식별한다. 이것은 유지보수에 다양한 문제를 야기한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Future Action Plan</p>\n<ul>\n<li>오늘 면접 보러갔는데, 코딩 테스트를 망쳤다..ㅋㅋㅋㅋ 알고리즘 문제인줄 알았는데 간단한 frontend 과제를 하는 문제였고 vanilla js와 react를 선택할 수 있었다. 근데 vanilla js 는 모르겠고, react로 진행했었는데, 과제할땐 더 편하게 해주는 도구들이 있어서 사용하지 않았던 너무 기초적인 것들을 사용해서 구현해야되서 검색하며 구현하느라 시간이 오래걸렸다. 살짝 아쉬웠다. 그리고 vanillajs가 대체 뭐길래 !!! 한번 공부를 해보긴해야겠다. 궁금하다.</li>\n<li>면접에서 매일 공부하고 기록하는것에 대해서 긍정적으로 평가를 받았다. 정리하기위해 작성하던 것들인데 오히려 공부를 꾸준히 해왔다는 것을 보여줄 수 있는 수단으로 작용한것같다. til이나 정리하지 안한것들이 산더미인데 ㅋㅋㅋ 오히려 정리를 잘해놨다면 좋았을탠데… 이전에 공부했던 것들 다시 복습겸 공부하면서 정리하는 시간을 가져야겠다.</li>\n<li>object 책을 읽는데 너무 재미있다… 실제로 다 이해하진 못하지만 여러번 읽으면서 너무 재미있다고 느낀다. 결국 미칠듯이 어려운것들도 진지하게 공부한다면 이렇게 즐거운 순간도 온다는것을 느꼈고, 여태 해온것처럼 꾸준히 공부한다. 어려운것이 나와도 묵묵하게 반복해서 정복한다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"2021-05-17 TIL","date":"May 17, 2021"}}},"pageContext":{"slug":"/til/2021-05-17/","previous":{"fields":{"slug":"/study/iterator in es6/"},"frontmatter":{"title":"iterator in ES6","category":"es6"}},"next":{"fields":{"slug":"/study/하루3분 네트워크5/"},"frontmatter":{"title":"하루 3분 네트워크 스터디 5","category":"study"}}}},"staticQueryHashes":["3128451518","96099027"]}