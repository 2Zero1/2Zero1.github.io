{"componentChunkName":"component---src-templates-blog-post-js","path":"/retrospectives/코드숨 8주차/","result":{"data":{"site":{"siteMetadata":{"title":"Zero1's Note","author":"Zero1","siteUrl":"https://github.com/2Zero1","comment":{"disqusShortName":"2Zero1","utterances":"2Zero1 Blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"95a23ddb-feaa-5971-933b-e48982161891","excerpt":"fact 코드숨 8강을 공부했다. react와 redux 문서를 읽어보았다. 이해가 잘 되지 않는 내용들이 꽤 많았지만, 다 읽어보았다. 프로 자바스크립트 테크닉 110 페이지를 읽고 따라쳐보았다. 프로젝트 기획서와 테스트 목록을 작성 하였다. 웨이트를 너무 오랜만에 해서 그런지 근육통이 너무 심하다. 너무 아파서 자다가도 계속 깼다.. 지금도 너무 아파 ㅠㅠㅠ 주말엔 공부할 계획을 세워놓고 놀았다.. 왜그랬을까 .. feelings…","html":"<ol>\n<li>\n<p>fact</p>\n<ul>\n<li>코드숨 8강을 공부했다.</li>\n<li>react와 redux 문서를 읽어보았다. 이해가 잘 되지 않는 내용들이 꽤 많았지만, 다 읽어보았다.</li>\n<li>프로 자바스크립트 테크닉 110 페이지를 읽고 따라쳐보았다.</li>\n<li>프로젝트 기획서와 테스트 목록을 작성 하였다.</li>\n<li>웨이트를 너무 오랜만에 해서 그런지 근육통이 너무 심하다. 너무 아파서 자다가도 계속 깼다.. 지금도 너무 아파 ㅠㅠㅠ</li>\n<li>주말엔 공부할 계획을 세워놓고 놀았다.. 왜그랬을까 ..</li>\n</ul>\n</li>\n<li>\n<p>feelings</p>\n<ul>\n<li>주중에는 항상 계획대로 할일들을 모두 완료 했지만, 주말에는 하지 못했다. 너무 아쉽다.</li>\n<li>react와 redux를 읽으면서 이전에 생각 없이 사용하던 부분들이 어떻게 움직이는지 알 수 있게 되었다. 이해가 잘 안되지만, 주기적으로 읽어보면서 체화시켜야겠다.</li>\n<li>프로젝트 기획을 하면서 오랜만에 이전 회사에서 하던 일들이 떠올라서 좋았다. 정말 값진 것들을 배울 수 있었던 회사이다.</li>\n<li>주말에 공부를 안해서 너무 아쉽다. 대책을 세워봐야겠다. 맨날 이러는듯 .. 계획을 세웠으면 해야지 … 문제가 뭐야 …</li>\n</ul>\n</li>\n<li>\n<p>finding</p>\n<ul>\n<li>redux-toolkit 을 알게되었다. 귀찬다고 생각했던 부분들을 해결해주었다.</li>\n<li>emotion 이란것을 이용해보았다.</li>\n<li>redux</li>\n<li>dispatcher, stores, views로 이루어져 있다.</li>\n<li>어플 최상위에 controller-views가 존재하며, stores에서 데이터를 가져와 그 데이터를 자식에게 보내는 역할을 한다.</li>\n<li>mvc와 다르게 단방향으로 데이터가 흐르며, view는 중앙의 dispatcher를 통해 action을 전파한다.</li>\n<li>모든 데이터는 중앙 허브인 dispatcher를 통해 흐르며, action은 dispatcher에게 action creator 메서드를 제공하는데 대부분의 action은 view에서의 사용자 상호작용에서 발생한다. dispatcher는 store를 등록하기 위한 콜백을 실행한 이후 action을 모든 store에 전달한다. 등록된 콜백을 활용해 store는 관리하고 있는 상태 중 어떤 액션이라도 관련이 있다면 전달해준다. store는 change 이벤트를 controller-views에 알려주고 그 결과 데이터 계층에서 변화가 일어난다. controller-view는 이 이벤트를 듣고 있다가 이벤트 핸들러가 있는 store에서 데이터를 다시 가져오고, controller-views는 스스로의 setState() 메서드를 호출하고 컴포넌트 트리에 속해 있는 자식 노드 모두를 다시 랜더링한다.</li>\n<li>app의 데이터와 비즈니스 로직을 갖는 store는 action이 전파되면 action에 영향이 있는 모든 view를 갱신한다.</li>\n</ul>\n</li>\n<li>\n<p>Future Action Plan</p>\n<ul>\n<li>주말에 내가 계획을 세워놓고 실행에 옮기지 못하는 이유를 생각해 보고 해결방법을 생각해 보아야겠다.</li>\n<li>내일은 등 운동</li>\n<li>\n<p>프로젝트에 서버와 디자인 부분을 어떻게 해결해야될지 생각해 보아야겠다.</p>\n<ul>\n<li>이전에 배웠던 spring을 다시 공부하는 겸 해볼까 생각중.. 프런트 작업 먼저 다 끝내고.. 회사에서 배운 코틀린으로 해볼까 ..? 근데 이전 회사 프레임 워크만 사용하다가 하려니까 새로운듯 .. 이전에 배웠던 자백러먼저 해보고 옮겨볼까 ..? 시간이 남으면 하자 ..</li>\n<li>디자인을 맡겨야 되나 생각이 든다. 프런트에선 디자인 부분이 굉장히 중요하지만, 나에겐 아직 그런 부분에 대한 지식이 부족하다. 일단 프로젝트에 필요한 만큼만 우선순위로 계획에 놓고 추후에 진행하는걸로 해본다.</li>\n</ul>\n</li>\n<li>프로젝트 일정을 세워봐야겠다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"코드숨 리액트 8주차 회고","date":"March 21, 2021"}}},"pageContext":{"slug":"/retrospectives/코드숨 8주차/","previous":{"fields":{"slug":"/til/2021-03-18/"},"frontmatter":{"title":"2021-03-18 TIL","category":"TIL"}},"next":{"fields":{"slug":"/study/하루3분 네트워크5/"},"frontmatter":{"title":"하루 3분 네트워크 스터디 5","category":"study"}}}},"staticQueryHashes":["3128451518","96099027"]}