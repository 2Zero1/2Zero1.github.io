{"data":{"site":{"siteMetadata":{"title":"Zero1's Note","author":"Zero1","siteUrl":"https://github.com/2Zero1","comment":{"disqusShortName":"2Zero1","utterances":"2Zero1 Blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"ad8ca0ab-a879-55bf-ac95-1d6e461b359c","excerpt":"오늘 할 목록 진행 중인 목록 integration test 부분 공부해서 채워놓기. 자백러 정리. 완료한 목록 쇠막대 알고리즘 풀기(스택) 자백러 Spring CRUD 완료. Today I Learn 1.  알고리즘 문제 이름 : 쇠막대 문제 설명 입력값 n…","html":"<h1 id=\"오늘-할-목록\"><a href=\"#%EC%98%A4%EB%8A%98-%ED%95%A0-%EB%AA%A9%EB%A1%9D\" aria-label=\"오늘 할 목록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>오늘 할 목록</h1>\n<h1 id=\"진행-중인-목록\"><a href=\"#%EC%A7%84%ED%96%89-%EC%A4%91%EC%9D%B8-%EB%AA%A9%EB%A1%9D\" aria-label=\"진행 중인 목록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>진행 중인 목록</h1>\n<ul>\n<li>integration test 부분 공부해서 채워놓기.</li>\n<li>\n<p>자백러 정리.</p>\n<h1 id=\"완료한-목록\"><a href=\"#%EC%99%84%EB%A3%8C%ED%95%9C-%EB%AA%A9%EB%A1%9D\" aria-label=\"완료한 목록 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>완료한 목록</h1>\n</li>\n<li>쇠막대 알고리즘 풀기(스택)</li>\n<li>자백러 Spring CRUD 완료.</li>\n</ul>\n<h1 id=\"today-i-learn\"><a href=\"#today-i-learn\" aria-label=\"today i learn permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Today I Learn</h1>\n<h2 id=\"1--알고리즘\"><a href=\"#1--%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"1  알고리즘 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.  알고리즘</h2>\n<ol>\n<li>문제 이름 : 쇠막대</li>\n<li>\n<p>문제 설명</p>\n<ul>\n<li>입력값 n : ()(((()())(())()))(())</li>\n<li>괄호가 연속으로 열고 닫을 경우에 레이저로 간주한다.   ->’()’</li>\n<li>그 이외에 ( 는 쇠막대의 시작을 뜻하고, ) 는 쇠막대의 끝을 의미한다.</li>\n<li>쇠막대가 밑의 그림과 같이 여러개로 쌓여 있고, 레이저 가 있는 부분을 절단 했을때 막대 조각의 개수를 구한다 ! </li>\n<li><img src=\"/til/images/2019-11-28/ironstick.png\" alt=\"iron stick\"></li>\n</ul>\n</li>\n<li>\n<p>풀이</p>\n<ol>\n<li>\n<p>첫번쩨 풀이</p>\n<ol>\n<li>막대의 범위를 각각 구하고, 레이져의 범위를 각각 구한다.(첫번째 0 ~ 마지막 n)</li>\n<li>다 구한 후에, 각각 막대의 범위 안에 몇개의 레이져가 존재하는지 확인한다.</li>\n<li>각 막대안에 존재하는 레이져 + 1을 하면 막대기의 개수로, 모두 더해준다.</li>\n</ol>\n</li>\n<li>\n<p>두번째 풀이</p>\n<ol>\n<li>() : 를 0으로 변경해준다.</li>\n<li>하나씩 읽어온다.</li>\n<li>( : 스택에 push</li>\n<li>0 : 레이저로 자르는 행위 이므로, 현재 스택에 쌓인 요소의 수를 더한다.</li>\n<li>) : 막대가 끝나는 것을 의미하므로 +1을 해준다.</li>\n<li>이 문제는 풀이에 어떻게 문제를 풀지에 대한 의도가 들어나지 않으므로 좋은 풀이는 아닌것 같다. </li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"2-tddtest-driven-development--테스트-주도-개발\"><a href=\"#2-tddtest-driven-development--%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A3%BC%EB%8F%84-%EA%B0%9C%EB%B0%9C\" aria-label=\"2 tddtest driven development  테스트 주도 개발 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. TDD(Test Driven Development) : 테스트 주도 개발</h2>\n<ol>\n<li>\n<p>유저 스토리란?</p>\n<ul>\n<li>\n<p>소프트웨어 또는 서비스에 대한 서비스에 대한 설명을 사용자의 관점으로 글로 기술한 것이다.</p>\n</li>\n<li>\n<p>유저 스토리를 기반으로, TDD의 최상의 test 인 E2E를 만들 수 있다.</p>\n</li>\n<li>\n<p>방법</p>\n<ul>\n<li>As</li>\n<li>So </li>\n<li>That I </li>\n</ul>\n</li>\n<li>\n<p>유의사항</p>\n<ol>\n<li>일관된 언어 사용</li>\n<li>일반 사용자가 알아 볼 수 있도록 명확히 작성.</li>\n<li>기술 세부사항 제거.</li>\n<li>역할 명확히 하기</li>\n</ol>\n</li>\n<li>\n<p>유저 스토리를 테스트로 작성하기 !</p>\n<ul>\n<li>\n<p>BDD(Behavior-Driven-development)를 이용한다 !</p>\n<ul>\n<li>BDD란 개발자, QA,비 개발 직군의 사람들과 협업을 증진 시키기 위한 애자일 개발 프로세스이다.</li>\n<li>팀원들간 어플이 어떻게 이해하는지에 대한 이해를 공유하기 위해 대화와 예제를 사용한다.</li>\n</ul>\n</li>\n<li>gherkin( 위에서 말한 As, So, That I )언어를 이용하고, Codeceptjs란 e2e test framework를 이용하여 테스트를 작성한다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>TDD의 테스트는 밑의 사진으로 보면 3가지의 테스트로 이루어 진다. </p>\n<ul>\n<li>가장 최상단의 E2E(end to end)Test는 사용자가 우리의 서비스를 이용할 때 기대하는 결과값이 나오는지에 대한 테스트이다. </li>\n<li>가운대에는 IntegrationTest로 이부분은 좀 더 공부해서 추가할 필요가 있다.</li>\n<li>마지막으로는 각각 UnitTest로 단위 테스트라고 하며, 가장 작은 단위의 테스트이다. 기능을 구성하는 코드의 각 부분에 대한 테스트가라고 생각할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>유저 스토리에서 서비스 안에서 사용자들의 행동을 정의하고, 이로부터, e2e 테스트를 작성할 수 있고, e2e 테스트로 부터는 integration test를 작성할 수 있으며, integration으로 부터 가장 작은 단위인 unit test를 작성할 수 있다. </p>\n</li>\n<li>\n<p>위와 같은 방법으로, 개발자들은 개발 진행 상황을 수치로 나타낼 수 있으며, 실제로 사용자의 행동을 기반으로 테스트를 만들기 때문에, 개발자는 사용자는 필요로 하지 않는 기능을 구현을 안할 수 있다.</p>\n</li>\n</ol>","frontmatter":{"title":"2019-11-28 TIL","date":"November 28, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/til/2019-11-28/","previous":{"fields":{"slug":"/weeklyPlan/2020-05 첫째 주/"},"frontmatter":{"title":"2020-05 첫째 주","category":"weekly plan"}},"next":{"fields":{"slug":"/til/2019-11-29/"},"frontmatter":{"title":"2019-11-29 TIL","category":"TIL"}}}}