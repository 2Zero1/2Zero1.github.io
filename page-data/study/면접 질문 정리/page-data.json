{"componentChunkName":"component---src-templates-blog-post-js","path":"/study/면접 질문 정리/","result":{"data":{"site":{"siteMetadata":{"title":"Zero1's Note","author":"Zero1","siteUrl":"https://github.com/2Zero1","comment":{"disqusShortName":"2Zero1","utterances":"2Zero1 Blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"3a6e95f2-501b-5548-b227-c95615f61996","excerpt":"브라우저의 렌더링 과정을 네트워크 지식과 함께 설명하라 브라우저 주소창에 도메인 입력 DNS 서버로 가서 해당 도메인이 있는지 확인. 있으면 ip를 되돌려줌 해당 IP로 요청(이부분은 네트워크 내용이 들어가야함.) 서버로 부터 html 파일을 받아옴. 브라우저는 html 파일을 파싱하여 dom tree로 만듬. 중간에 link 또는 css 또는 로드할게 있으면, 브라우저는 html 파싱을 멈추고 요청을 한 후에 css를 파싱함. 로딩 또는 css 파싱 끝나면 html을 다시 파싱하여 dom…","html":"<ol>\n<li>\n<p>브라우저의 렌더링 과정을 네트워크 지식과 함께 설명하라</p>\n<ol>\n<li>브라우저 주소창에 도메인 입력</li>\n<li>DNS 서버로 가서 해당 도메인이 있는지 확인. 있으면 ip를 되돌려줌</li>\n<li>해당 IP로 요청(이부분은 네트워크 내용이 들어가야함.)</li>\n<li>서버로 부터 html 파일을 받아옴.</li>\n<li>브라우저는 html 파일을 파싱하여 dom tree로 만듬.</li>\n<li>중간에 link 또는 css 또는 로드할게 있으면, 브라우저는 html 파싱을 멈추고 요청을 한 후에 css를 파싱함.</li>\n<li>로딩 또는 css 파싱 끝나면 html을 다시 파싱하여 dom tree 완성.</li>\n<li>완성된 dom 트리와 cssom 트리를 합쳐 render tree를 만든다.</li>\n<li>중간에 js 파일을 만나면 브라우저는 또 html 파싱을 멈추고 js 를 로딩 후 제어 권한을 자바스크립트 엔진에게 넘기고, 자바스크립트 코드 또는 파일을 로드해서 파싱하고 실행.</li>\n</ol>\n</li>\n<li>\n<p>비동기 프로그래밍</p>\n<ol>\n<li>비동기 프로그래밍이란?</li>\n<li>ajax란 무엇인가</li>\n<li>Javascript의 라이브러리로 Asynchronous Javascript and Xml의 약자이다.</li>\n<li>브라우저가 갖고 있는 XMLHttpRequest 객체를 이용해 전체 페이지를 새로 고치지 않고도 페이지의 일부만을 위한 데이터를 로드 하는 기법이며 javascript를 사용한 비동기 통신, 클라이언트와 서버간에 xml 데이터를 주고 받는 기술이다.</li>\n<li>자바스크립트를 이용해 비동기적으로 서버와 브라우저가 데이터를 교환할 수 있는 통신 방식.</li>\n<li>promise와 callback의 차이점</li>\n</ol>\n</li>\n<li>\n<p>자바스크립트의 타입</p>\n<ol>\n<li>\n<p>자바스크립트의 원시타입</p>\n<ul>\n<li>string, number, bigint, boolean, undefined, symbol</li>\n<li>겉보기엔 null도 원시값처럼 보이지만 사실 모든 Object, 모든 구조화된 자료형은 프로토 타입 체인에 따라 null의 자손이다.</li>\n<li>원시값은 불변하여 변형할 수 없다.</li>\n<li>원시값 자체와, 원시값을 할당한 변수를 혼동하지 않아야한다. 변수는 새오누 값을 다시 할당할 수 있지만, 이미 생성한 원시 값은 객체, 배열, 함수와 달리 변형할 수 없다. 예로 변수에 영어 string을 넣어놓고 toUpperCase() 함수를  실행한 후 변수를 찍어보면 변하지 않음을 볼 수 있다.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>자바스크립트 hoisting</li>\n<li>clusure</li>\n<li>가비지 컬렉터의 역할과 동작 방법</li>\n<li>순환참조란? 해결방법</li>\n<li>자바스크립트의 배열이 실제 자료구조 배열이 아니다?</li>\n<li>이벤트 루프에 대해 설명, 동시성 모델에 대해 설명</li>\n<li>프로토 타입이란?</li>\n<li>\n<p>this</p>\n<ol>\n<li>자바스크립트에서 this는 몇가지로 추론되는지</li>\n<li>call, apply, bind 함수의 차이</li>\n<li>use strict모드란</li>\n</ol>\n</li>\n</ol>","frontmatter":{"title":"면접 질문","date":"December 04, 2019"}}},"pageContext":{"slug":"/study/면접 질문 정리/","previous":{"fields":{"slug":"/til/2019-11-29/"},"frontmatter":{"title":"2019-11-29 TIL","category":"TIL"}},"next":{"fields":{"slug":"/study/자료구조 특징/"},"frontmatter":{"title":"자료구조 특징","category":"자료구조"}}}},"staticQueryHashes":["3128451518","96099027"]}