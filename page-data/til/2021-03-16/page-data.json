{"componentChunkName":"component---src-templates-blog-post-js","path":"/til/2021-03-16/","result":{"data":{"site":{"siteMetadata":{"title":"Zero1's Note","author":"Zero1","siteUrl":"https://github.com/2Zero1","comment":{"disqusShortName":"2Zero1","utterances":"2Zero1 Blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"d31a68bf-ef1c-5dc2-928a-edbc72b98763","excerpt":"fact…","html":"<ol>\n<li>\n<p>fact</p>\n<ul>\n<li>강의 따라치기</li>\n<li>\n<p>내가 계획을 잘 실천하지 못하는 문제를 해결하기 위한 방안을 실천하여 나아졌다.</p>\n<ul>\n<li>정해진 시간 외에 휴대폰 꺼놓기</li>\n<li>컴퓨터 카톡 삭제</li>\n</ul>\n</li>\n<li>\n<p>잘 안될때 내적이나 외적으로 탓하지 않고, 왜 이런 현상이 발생했는지 이성적으로 분석해보았다.</p>\n<ul>\n<li>통제 가능한 것과 불가능한 것으로 나눠보고 통제 가능한 것들은 방안을 세웠으며 불가능한 것도 완전히 통제 불가능한 것이 아니고, 최대한 줋일 수 있는 방안을 세워 실천하였다.</li>\n</ul>\n</li>\n<li>잘 안되면 기분 나빠하지 말고 왜 그런 일이 발생했는지 분석해보자.</li>\n<li>헬스장을 등록하고 운동했다.</li>\n<li>프로 자바스크립트 테크닉책 20페이지를 읽었다.</li>\n</ul>\n</li>\n<li>\n<p>feelings</p>\n<ul>\n<li>오늘은 잘 안되더라도 기분나빠하지 않고 기분 좋게 공부했다.</li>\n<li>프로 자바스크립트 책을 시작하게 되어 기쁘다.</li>\n<li>헬스장에 오랜만에 가서 운동해서 기분이 좋고 졸리다.</li>\n</ul>\n</li>\n<li>\n<p>finding</p>\n<ul>\n<li>코드숨</li>\n<li>\n<p>프로 자바스크립트 테크닉</p>\n<ul>\n<li>챕터 2 : 특징, 함수 및 객체</li>\n<li>객체는 자바스크립트의 기본적인 단위다.</li>\n<li>자바스크립트의 모든 것은 객체와 객체-기반 수준에서의 상호작용이다.</li>\n<li>\n<p>참조와 값</p>\n<ul>\n<li>자바스크립트 변수는 값을 복사하거나 참조하는 방식으로 데이터를 담는다.</li>\n<li>기본이 되는 값은 무엇이든 변수로 복제된다.</li>\n<li>기본적인 것이란 문자열, 숫자, 부울, 빈 값(null)이나 정의되지 않은 것(undefined)을 뜻한다.</li>\n<li>기본적인 유형의 가장 큰 특징은 할당되고, 복사되고, 함수에 전달하거나 반환할 때 값(value로 처리된다는 점이다.)</li>\n<li>어떤 변수가 앞서 언급한 기초적인 값 중 하나를 담지 않는다면 객체를 참조한다.</li>\n<li>참조 값은 객체(또는 배열이나 날짜, 혹은 무엇이든가)가 메모리에 담긴 주소를 가리키는 포인터다.</li>\n<li>실질적인 객체(배열,날짜,혹은 임의의 것)는 참조되는 값이다.</li>\n<li>객체는 두 가지 특징을 같은데 property와 method다. 이들은 객체의 members로 불린다. 속성은 객체의 자료를 담으며, 기초적인 값이거나 객체가 될 수 있다. method는 객체 데이터에 대한 함수이다.</li>\n<li>자바스크립트는 연쇄적으로 참조할 수 없고 오로지 핵심 객체만을 가리킬 수 있다.</li>\n<li>문자열을 합칠 때 그 결과는 원시 문자열을 수정하기보다 항상 새로운 문자열 객체를 취한다. 문자열은 기초적이기 때문에 실질적으로 참조되는 값이 아니며, 따라서 이를 포함하는 변수는 참조값이 아니다.</li>\n<li>문자열은 length 같은 속성을 갖고, indexOf나 toUpperCase 같은 method를 갖는다. 하지만 변수나 함수와 상호작용할 때 문자열은 기본적이다.</li>\n</ul>\n</li>\n<li>\n<p>범위</p>\n<ul>\n<li>자바스크립트는 두가지의 범위를 가지며 함수의 범위와 전역범위이다. (p17 2-6)</li>\n<li>함수는 자체의 범위를 갖지만 블록(while, if, for)은 그렇지 않다.</li>\n<li>전역 범위에 속하는 변수는 어떤 것이든 브라우저에 기반한 자바스크립트에서 window 객체의 속성을 찾을 수 있다.</li>\n</ul>\n</li>\n<li>\n<p>맥락</p>\n<ul>\n<li>항상 (코드가 동작하는 내부 범위인) context을 어떤 형식으로 갖는다.</li>\n<li>this를 통해 접근하며, 언제나 코드가 실행중인 내부의 맥락을 의미한다.(p17 2-7)</li>\n<li>전역 객체는 실질적으로 window 객체의 속성이다.(window.변수 로 접근 가능)</li>\n<li>this는 어떤 맥락(객체)에 있냐에 따라 this가 가리키는 것이 달라진다.</li>\n<li>\n<p>자바스크립트는 구체적으로 임의로 지정된 맥락 안에서 함수를 실행하는 두가지 방법을 갖는다.(p17 2-8)</p>\n<ul>\n<li>call</li>\n<li>apply</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Future Action Plan</p>\n<ul>\n<li>내일도 기분 좋게 공부해야겠다.</li>\n<li>운동을 해야겠다.</li>\n<li>코드숨을 같이 하고 있는 사람들의 장점들을 살펴봐야겠다.</li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"2021-03-16 TIL","date":"March 16, 2021"}}},"pageContext":{"slug":"/til/2021-03-16/","previous":{"fields":{"slug":"/retrospectives/코드숨 7주차/"},"frontmatter":{"title":"코드숨 리액트 7주차 회고","category":"회고"}},"next":{"fields":{"slug":"/study/하루3분 네트워크5/"},"frontmatter":{"title":"하루 3분 네트워크 스터디 5","category":"study"}}}},"staticQueryHashes":["3128451518","96099027"]}